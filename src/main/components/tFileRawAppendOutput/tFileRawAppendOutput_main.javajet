<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
		
	boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
	
        boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
    
	java.util.List<IMetadataColumn> columnList = null;
	java.util.List<IMetadataTable> metadatas = node.getMetadataList();
	if(metadatas != null && metadatas.size() > 0) {
            IMetadataTable metadata = metadatas.get(0);
            if(metadata != null) {
                columnList = metadata.getListColumns();
            }
	}
	java.util.List< ? extends IConnection> incomingConns = node.getIncomingConnections();
	if(columnList!=null && incomingConns!=null && incomingConns.size()>0) {
            for(IConnection incomingConn : incomingConns) {
                if(incomingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
                    try {
                        Object content_<%=cid%> = <%=incomingConn.getName()%>.<%=columnList.get(0).getLabel()%>;

                        if(content_<%=cid%> != null) {
                            if (content_<%=cid%> instanceof String) {
                                fos_<%=cid%>.write( ((String) content_<%=cid%>).getBytes() );
                            } else if (content_<%=cid%>  instanceof byte[]) {
                                fos_<%=cid%>.write(  (byte[]) content_<%=cid%>  );
                            } else if (content_<%=cid%>   instanceof java.io.InputStream) {
                                java.io.InputStream fis_<%=cid%> = (java.io.InputStream) content_<%=cid%> ;
                                byte[] buffer = new byte[4096];
                                int len = 0;
                                while ( (len=fis_<%=cid%>.read(buffer))>0 ) {
                                    fos_<%=cid%>.write(buffer, 0, len);
                                }
                                fis_<%=cid%>.close();
                            } else {
                                fos_<%=cid%>.write( content_<%=cid%>.toString().getBytes() );

                            }
                        }
                    } catch (java.lang.Exception e_<%=cid%>) {
<%
                        if(dieOnError) {
%>
                            throw e_<%=cid%>;
<%
                        } else {
%>
                            System.err.println(e_<%=cid%>);
<%
                            if(isLog4jEnabled) {
%>
                                log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
<%
                            }
                        }
%>
                    }
<%
                }// end IConnection.getLineStyle
        } // end IConnection
    }// end i
%>